 ; Copyright (c) 2011 The University of Utah
 ;
 ; Permission is hereby granted, free of charge, to any person obtaining a copy
 ; of this software and associated documentation files (the "Software"), to
 ; deal in the Software without restriction, including without limitation the
 ; rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 ; sell copies of the Software, and to permit persons to whom the Software is
 ; furnished to do so, subject to the following conditions:
 ;
 ; The above copyright notice and this permission notice shall be included in
 ; all copies or substantial portions of the Software.
 ;
 ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 ; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 ; IN THE SOFTWARE.

(let* ([id (lambda (x) x)]
       [l literal-chunk]
       [c concat-chunk]
       [b between-chunk]
       [b/a between/attach-chunk]
       [n namespace-define-chunk]
       [i (lambda chunks (between/attach-chunk semi-colon-chunk
                                               blank-line-chunk
                                               chunks))]
       [d described-smts-chunk]
       [p paren-list-chunk]
       [m macro-define-chunk]
       [s space-chunk]
       [typedef typedef-smt-chunk]
       [tpl-pmtr (lambda (pmtr) (c typename-chunk s pmtr))]
       [SVG-chunk 'SrcValidGhost]
       [DVG-chunk 'DestValidGhost]
       [fc function-call-chunk]
       [mfc member-function-call-chunk]
       [fcn-def function-define-chunk]
       [v-fcn-def void-function-define-chunk]
       [r-fcn-def returning-function-define-chunk]
       [fcn-dcl function-declare-chunk]
       [constize constize-chunk]
       [s-fcn-dcl static-function-declare-chunk]
       [tpl-def template-define-chunk]
       [tpl-srt-dcl template-struct-declare-chunk]
       [tpl-srt-def template-struct-define-chunk]
       [tpl-use template-use-chunk]
       [sec-def section-define-chunk]
       [scope scope-resolution-operator-chunk]
       [NCF-chunk 'NeboConstField]
       [NF-chunk 'NeboField]
       [pp-header-file-chunk-with-license
        (lambda (file-name file-setup . chunks)
          (c (b new-line-chunk
                "/*"
                " * Copyright (c) 2011 The University of Utah"
                " *"
                " * Permission is hereby granted, free of charge, to any person obtaining a copy"
                " * of this software and associated documentation files (the \"Software\"), to"
                " * deal in the Software without restriction, including without limitation the"
                " * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or"
                " * sell copies of the Software, and to permit persons to whom the Software is"
                " * furnished to do so, subject to the following conditions:"
                " *"
                " * The above copyright notice and this permission notice shall be included in"
                " * all copies or substantial portions of the Software."
                " *"
                " * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
                " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
                " * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"
                " * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
                " * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING"
                " * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS"
                " * IN THE SOFTWARE."
                " */")
             blank-line-chunk
             (pp-header-file-chunk file-name file-setup chunks)))]
       )
  ; beginnning of file
  (pp-header-file-chunk-with-license
   'SpatialOps_FieldExpressionsStencil_4_h
   (between-chunk blank-line-chunk
                  (pp-includes-chunk 'spatialops/SpatialOpsConfigure.h
                                     ;'spatialops/structured/FVStaggeredFieldTypes.h
                                     'spatialops/FieldExpressions.h
                                     'spatialops/structured/stencil/Stencil4.h)
                  (comment-env-chunk (pp-include-chunk 'iostream))
                  (pp-conditional-ifdef-chunk
                   'STENCIL_THREADS
                   (between-chunk new-line-chunk
                                  (pp-includes-chunk 'vector
                                                     'boost/bind.hpp
                                                     'spatialops/ThreadPool.h
                                                     'spatialops/structured/IntVec.h
                                                     'boost/interprocess/sync/interprocess_semaphore.hpp)
                                  "namespace BI = boost::interprocess;")))
   (n 'SpatialOps
      (n 'structured
         (tpl-def (list (c typename-chunk s 'OperatorType)
                        (c typename-chunk s 'SrcType)
                        (c typename-chunk s 'DestType))
                  (v-fcn-def 'stencil_4_apply_to_field_sequential_execute_internal
                             (list (b s
                                      'SrcType
                                      const-chunk
                                      "&"
                                      'src)
                                   (b s
                                      'DestType
                                      "&"
                                      'dest)
                                   (b s
                                      'double
                                      const-chunk
                                      'coef1)
                                   (b s
                                      'double
                                      const-chunk
                                      'coef2)
                                   (b s
                                      'double
                                      const-chunk
                                      'coef3)
                                   (b s
                                      'double
                                      const-chunk
                                      'coef4))
                             (list (typedef (scope 's4detail
                                                   (tpl-use 'ExtentsAndOffsets
                                                            'SrcType
                                                            'DestType))
                                            'Extents)
                                   (b s
                                      const-chunk
                                      'MemoryWindow
                                      "&"
                                      'ws
                                      "="
                                      (mfc 'src
                                           'window_with_ghost))
                                   (b s
                                      const-chunk
                                      'MemoryWindow
                                      (fc 'ws1
                                          (mfc 'ws
                                               'glob_dim)
                                          (b s
                                             (mfc 'ws
                                                  'offset)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'Src1Offset
                                                               'int_vec))))
                                          (b s
                                             (mfc 'ws
                                                  'extent)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'Src1Extent
                                                               'int_vec)))
                                             "+"
                                             (mfc 'ws
                                                  'has_bc)
                                             "*"
                                             (fc (scope 'Extents
                                                        (scope 'Src1ExtentBC
                                                               'int_vec))))
                                          (mfc 'ws
                                               'has_bc
                                               "0")
                                          (mfc 'ws
                                               'has_bc
                                               "1")
                                          (mfc 'ws
                                               'has_bc
                                               "2")))
                                   (b s
                                      const-chunk
                                      'MemoryWindow
                                      (fc 'ws2
                                          (mfc 'ws
                                               'glob_dim)
                                          (b s
                                             (mfc 'ws
                                                  'offset)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'Src2Offset
                                                               'int_vec))))
                                          (b s
                                             (mfc 'ws
                                                  'extent)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'Src2Extent
                                                               'int_vec)))
                                             "+"
                                             (mfc 'ws
                                                  'has_bc)
                                             "*"
                                             (fc (scope 'Extents
                                                        (scope 'Src2ExtentBC
                                                               'int_vec))))
                                          (mfc 'ws
                                               'has_bc
                                               "0")
                                          (mfc 'ws
                                               'has_bc
                                               "1")
                                          (mfc 'ws
                                               'has_bc
                                               "2")))
                                   (b s
                                      const-chunk
                                      'MemoryWindow
                                      (fc 'ws3
                                          (mfc 'ws
                                               'glob_dim)
                                          (b s
                                             (mfc 'ws
                                                  'offset)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'Src3Offset
                                                               'int_vec))))
                                          (b s
                                             (mfc 'ws
                                                  'extent)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'Src3Extent
                                                               'int_vec)))
                                             "+"
                                             (mfc 'ws
                                                  'has_bc)
                                             "*"
                                             (fc (scope 'Extents
                                                        (scope 'Src3ExtentBC
                                                               'int_vec))))
                                          (mfc 'ws
                                               'has_bc
                                               "0")
                                          (mfc 'ws
                                               'has_bc
                                               "1")
                                          (mfc 'ws
                                               'has_bc
                                               "2")))
                                   (b s
                                      const-chunk
                                      'MemoryWindow
                                      (fc 'ws4
                                          (mfc 'ws
                                               'glob_dim)
                                          (b s
                                             (mfc 'ws
                                                  'offset)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'Src4Offset
                                                               'int_vec))))
                                          (b s
                                             (mfc 'ws
                                                  'extent)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'Src4Extent
                                                               'int_vec)))
                                             "+"
                                             (mfc 'ws
                                                  'has_bc)
                                             "*"
                                             (fc (scope 'Extents
                                                        (scope 'Src4ExtentBC
                                                               'int_vec))))
                                          (mfc 'ws
                                               'has_bc
                                               "0")
                                          (mfc 'ws
                                               'has_bc
                                               "1")
                                          (mfc 'ws
                                               'has_bc
                                               "2")))
                                   (b s
                                      const-chunk
                                      'MemoryWindow
                                      "&"
                                      'wdest
                                      "="
                                      (mfc 'dest
                                           'window_with_ghost))
                                   (b s
                                      const-chunk
                                      'MemoryWindow
                                      (fc 'wd
                                          (mfc 'wdest
                                               'glob_dim)
                                          (b s
                                             (mfc 'wdest
                                                  'offset)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'DestOffset
                                                               'int_vec))))
                                          (b s
                                             (mfc 'wdest
                                                  'extent)
                                             "+"
                                             (fc (scope 'Extents
                                                        (scope 'DestExtent
                                                               'int_vec)))
                                             "+"
                                             (mfc 'wdest
                                                  'has_bc)
                                             "*"
                                             (fc (scope 'Extents
                                                        (scope 'DestExtentBC
                                                               'int_vec))))
                                          (mfc 'wdest
                                               'has_bc
                                               "0")
                                          (mfc 'wdest
                                               'has_bc
                                               "1")
                                          (mfc 'wdest
                                               'has_bc
                                               "2")))
                                   (pp-conditional-ifndef-chunk 'NDEBUG
                                                                (c (fc 'assert
                                                                       (b s
                                                                          (mfc 'ws1
                                                                               'extent)
                                                                          "=="
                                                                          (mfc 'ws2
                                                                               'extent)
                                                                          "&&"
                                                                          (mfc 'ws1
                                                                               'extent)
                                                                          "=="
                                                                          (mfc 'ws3
                                                                               'extent)
                                                                          "&&"
                                                                          (mfc 'ws1
                                                                               'extent)
                                                                          "=="
                                                                          (mfc 'ws4
                                                                               'extent)
                                                                          "&&"
                                                                          (mfc 'ws1
                                                                               'extent)
                                                                          "=="
                                                                          (mfc 'wd
                                                                               'extent)))
                                                                   semi-colon-chunk))
                                   (b s
                                      'DestType
                                      (fc 'd
                                          'wd
                                          "dest.field_values()"
                                          'ExternalStorage))
                                   (b s
                                      'SrcType
                                      (fc 's1
                                          'ws1
                                          "src.field_values()"
                                          'ExternalStorage))
                                   (b s
                                      'SrcType
                                      (fc 's2
                                          'ws2
                                          "src.field_values()"
                                          'ExternalStorage))
                                   (b s
                                      'SrcType
                                      (fc 's3
                                          'ws3
                                          "src.field_values()"
                                          'ExternalStorage))
                                   (b s
                                      'SrcType
                                      (fc 's4
                                          'ws4
                                          "src.field_values()"
                                          'ExternalStorage))
                                   (b s
                                      typename-chunk
                                      (scope 'DestType
                                             'iterator)
                                      'id
                                      "="
                                      (mfc 'd
                                           'begin))
                                   (b s
                                      typename-chunk
                                      (scope 'DestType
                                             'iterator)
                                      'ide
                                      "="
                                      (mfc 'd
                                           'end))
                                   (b s
                                      typename-chunk
                                      (scope 'SrcType
                                             'const_iterator)
                                      'is1
                                      "="
                                      (mfc 's1
                                           'begin))
                                   (b s
                                      typename-chunk
                                      (scope 'SrcType
                                             'const_iterator)
                                      'is2
                                      "="
                                      (mfc 's2
                                           'begin))
                                   (b s
                                      typename-chunk
                                      (scope 'SrcType
                                             'const_iterator)
                                      'is3
                                      "="
                                      (mfc 's3
                                           'begin))
                                   (b s
                                      typename-chunk
                                      (scope 'SrcType
                                             'const_iterator)
                                      'is4
                                      "="
                                      (mfc 's4
                                           'begin))
                                   (c 'for
                                      open-paren-chunk
                                      semi-colon-chunk
                                      s
                                      'id
                                      s
                                      "!="
                                      s
                                      'ide
                                      semi-colon-chunk
                                      s
                                      "++"
                                      'id
                                      comma-chunk
                                      s
                                      "++"
                                      'is1
                                      comma-chunk
                                      s
                                      "++"
                                      'is2
                                      comma-chunk
                                      s
                                      "++"
                                      'is3
                                      comma-chunk
                                      s
                                      "++"
                                      'is4
                                      close-paren-chunk
                                      (body-chunk
                                       (b s
                                          (c "*" 'id)
                                          "="
                                          (c "*" 'is1)
                                          "*"
                                          'coef1
                                          "+"
                                          (c "*" 'is2)
                                          "*"
                                          'coef2
                                          "+"
                                          (c "*" 'is3)
                                          "*"
                                          'coef3
                                          "+"
                                          (c "*" 'is4)
                                          "*"
                                          'coef4))))))
         (tpl-def (list (c typename-chunk s 'OperatorType)
                        (c typename-chunk s 'SrcType)
                        (c typename-chunk s 'DestType))
                  (v-fcn-def 'stencil_4_apply_to_field_sequential_execute
                             (list (b s
                                      'SrcType const-chunk "&" 'src)
                                   (b s
                                      'DestType "&" 'dest)
                                   (b s
                                      'double const-chunk 'coef1)
                                   (b s
                                      'double const-chunk 'coef2)
                                   (b s
                                      'double const-chunk 'coef3)
                                   (b s
                                      'double const-chunk 'coef4))
                             (fc (tpl-use 'stencil_4_apply_to_field_sequential_execute_internal
                                          'OperatorType
                                          'SrcType
                                          'DestType)
                                 'src
                                 'dest
                                 'coef1
                                 'coef2
                                 'coef3
                                 'coef4)))
         (b s
            'struct
            'Coef
            (body-chunk (constructor-chunk 'Coef
                                           (list (b s 'double const-chunk 'c1)
                                                 (b s 'double const-chunk 'c2)
                                                 (b s 'double const-chunk 'c3)
                                                 (b s 'double const-chunk 'c4))
                                           (list (constructor-assignment-chunk 'coef1_ 'c1)
                                                 (constructor-assignment-chunk 'coef2_ 'c2)
                                                 (constructor-assignment-chunk 'coef3_ 'c3)
                                                 (constructor-assignment-chunk 'coef4_ 'c4))
                                           null)
                        (b s 'double const-chunk 'coef1_)
                        (b s 'double const-chunk 'coef2_)
                        (b s 'double const-chunk 'coef3_)
                        (b s 'double const-chunk 'coef4_)
                        (r-fcn-def (constize (fcn-dcl 'coef1
                                                      'double))
                                   null
                                   'coef1_)
                        (r-fcn-def (constize (fcn-dcl 'coef2
                                                      'double))
                                   null
                                   'coef2_)
                        (r-fcn-def (constize (fcn-dcl 'coef3
                                                      'double))
                                   null
                                   'coef3_)
                        (r-fcn-def (constize (fcn-dcl 'coef4
                                                      'double))
                                   null
                                   'coef4_)))
         (pp-conditional-ifdef-chunk
          'STENCIL_THREADS
          (tpl-def (list (c typename-chunk s 'OperatorType)
                         (c typename-chunk s 'SrcType)
                         (c typename-chunk s 'DestType))
                   (v-fcn-def 'stencil_4_apply_to_field_thread_parallel_execute_internal
                              (list (b s
                                       'SrcType const-chunk "&" 'src)
                                    (b s
                                       'DestType "&" 'dest)
                                    (b s 'Coef const-chunk 'coefs)
                                    (b s
                                       'MemoryWindow const-chunk "&" 'sw)
                                    (b s
                                       'MemoryWindow const-chunk "&" 'dw)
                                    (b s 'IntVec const-chunk "&" 'split)
                                    (b s 'IntVec const-chunk "&" 'location)
                                    (b s
                                       (scope 'BI
                                              'interprocess_semaphore)
                                       "*"
                                       'sem))
                              (list (fc (tpl-use 'stencil_4_apply_to_field_sequential_execute_internal
                                                 'OperatorType
                                                 (c typename-chunk
                                                    s
                                                    (scope 'SrcType
                                                           'field_type))
                                                 (c typename-chunk
                                                    s
                                                    (scope 'DestType
                                                           'field_type)))
                                        (mfc (mfc 'src 'resize 'sw 'split 'location)
                                             'field)
                                        (mfc (mfc 'dest 'resize 'dw 'split 'location)
                                             'field)
                                        (mfc 'coefs 'coef1)
                                        (mfc 'coefs 'coef2)
                                        (mfc 'coefs 'coef3)
                                        (mfc 'coefs 'coef4))
                                    (fc (c 'sem
                                           "->"
                                           'post))))))
         (pp-conditional-ifdef-chunk
          'STENCIL_THREADS
          (tpl-def (list (c typename-chunk s 'OperatorType)
                         (c typename-chunk s 'SrcType)
                         (c typename-chunk s 'DestType))
                   (v-fcn-def 'stencil_4_apply_to_field_thread_parallel_execute
                              (list (b s
                                       'SrcType const-chunk "&" 'src)
                                    (b s
                                       'DestType "&" 'dest)
                                    (b s
                                       'double const-chunk 'coef1)
                                    (b s
                                       'double const-chunk 'coef2)
                                    (b s
                                       'double const-chunk 'coef3)
                                    (b s
                                       'double const-chunk 'coef4)
                                    (b s
                                       'int const-chunk 'number_of_partitions))
                              (typedef (tpl-pmtr (scope (scope 'structured (tpl-use 'FromGhost
                                                                                    (tpl-pmtr (scope 'SrcType 'Ghost))
                                                                                    (tpl-pmtr (scope (scope 'SrcType 'Location)
                                                                                                     'BCExtra))))
                                                        'result))
                                       SVG-chunk)
                              (typedef (tpl-pmtr (scope (scope 'structured (tpl-use 'FromGhost
                                                                                    (tpl-pmtr (scope 'DestType 'Ghost))
                                                                                    (tpl-pmtr (scope (scope 'DestType 'Location)
                                                                                                     'BCExtra))))
                                                        'result))
                                       DVG-chunk)
                              (typedef (scope 'structured (tpl-use 'IndexTriplet "0" "0" "0"))
                                       'InitialShift)
                              (typedef (c typename-chunk
                                          s
                                          (scope (tpl-use NCF-chunk
                                                          'Initial
                                                          'SrcType)
                                                 template-chunk)
                                          s
                                          (scope (tpl-use 'Iterator SVG-chunk 'InitialShift)
                                                 'ResizePrepType))
                                       'SrcPmtrType)
                              (typedef (c typename-chunk
                                          s
                                          (scope (tpl-use NF-chunk
                                                          'Initial
                                                          'DestType)
                                                 template-chunk)
                                          s
                                          (scope (tpl-use 'Iterator DVG-chunk 'InitialShift)
                                                 'ResizePrepType))
                                       'DestPmtrType)
                              (b s
                                 'MemoryWindow
                                 'sw
                                 "="
                                 (mfc 'src
                                      'window_with_ghost))
                              (b s
                                 'MemoryWindow
                                 'dw
                                 "="
                                 (mfc 'dest
                                      'window_with_ghost))
                              (smt-list-chunk new-line-chunk
                                              (b s
                                                 'int 'x "=" "1")
                                              (b s
                                                 'int 'y "=" "1")
                                              (b s
                                                 'int 'z "=" "1"))
                              (c 'if
                                 (p (c 'number_of_partitions
                                       s
                                       "<="
                                       s
                                       (mfc 'sw
                                            'extent
                                            "2")))
                                 (body-chunk (b s
                                                'z "=" 'number_of_partitions))
                                 new-line-chunk
                                 'else
                                 s
                                 'if
                                 (p (c 'number_of_partitions
                                       s
                                       "<="
                                       s
                                       (mfc 'sw
                                            'extent
                                            "1")))
                                 (body-chunk (b s
                                                'y "=" 'number_of_partitions))
                                 new-line-chunk
                                 'else
                                 s
                                 'if
                                 (p (c 'number_of_partitions
                                       s
                                       "<="
                                       s
                                       (mfc 'sw
                                            'extent
                                            "0")))
                                 (body-chunk (b s
                                                'x "=" 'number_of_partitions)))
                              (smt-list-chunk new-line-chunk
                                              (typedef (c typename-chunk
                                                          s
                                                          (scope (scope (scope 'SrcType
                                                                               'field_type)
                                                                        'Location)
                                                                 'BCExtra))
                                                       'SrcBCExtra)
                                              (typedef (c typename-chunk
                                                          s
                                                          (scope (scope (scope 'DestType
                                                                               'field_type)
                                                                        'Location)
                                                                 'BCExtra))
                                                       'DestBCExtra)
                                              (b s
                                                 (scope 'structured
                                                        'IntVec)
                                                 'sBC
                                                 "="
                                                 (b s
                                                    (mfc 'sw
                                                         'has_bc)
                                                    "*"
                                                    (fc (scope 'SrcBCExtra
                                                               'int_vec))))
                                              (b s
                                                 (scope 'structured
                                                        'IntVec)
                                                 'dBC
                                                 "="
                                                 (b s
                                                    (mfc 'dw
                                                         'has_bc)
                                                    "*"
                                                    (fc (scope 'DestBCExtra
                                                               'int_vec)))))
                              (b s 'IntVec 'split "=" (fc 'IntVec 'x 'y 'z))
                              (c (scope 'std
                                        (tpl-use 'vector
                                                 'MemoryWindow))
                                 s
                                 'vec_sw
                                 s
                                 "="
                                 s
                                 (mfc 'sw
                                      'split
                                      'split
                                      (fc (scope (scope (scope 'SrcType
                                                               'Ghost)
                                                        'NGhostMinus)
                                                 'int_vec))
                                      (fc (scope (scope (scope 'SrcType
                                                               'Ghost)
                                                        'NGhostPlus)
                                                 'int_vec))
                                      'sBC))
                              (c (scope 'std
                                        (tpl-use 'vector
                                                 'MemoryWindow))
                                 s
                                 'vec_dw
                                 s
                                 "="
                                 s
                                 (mfc 'dw
                                      'split
                                      'split
                                      (fc (scope (scope (scope 'SrcType
                                                               'Ghost)
                                                        'NGhostMinus)
                                                 'int_vec))
                                      (fc (scope (scope (scope 'SrcType
                                                               'Ghost)
                                                        'NGhostPlus)
                                                 'int_vec))
                                      'dBC))
                              (c (scope 'BI
                                        'interprocess_semaphore)
                                 s
                                 (fc 'semaphore
                                     "0"))
                              (c typename-chunk
                                 s
                                 (scope (scope 'std
                                               (tpl-use 'vector
                                                        'MemoryWindow))
                                        'const_iterator)
                                 s
                                 'ivec_sw
                                 s
                                 "="
                                 s
                                 (mfc 'vec_sw
                                      'begin))
                              (c typename-chunk
                                 s
                                 (scope (scope 'std
                                               (tpl-use 'vector
                                                        'MemoryWindow))
                                        'const_iterator)
                                 s
                                 'ivec_dw
                                 s
                                 "="
                                 s
                                 (mfc 'vec_dw
                                      'begin))
                              (c typename-chunk
                                 s
                                 (scope (scope 'std
                                               (tpl-use 'vector
                                                        'MemoryWindow))
                                        'const_iterator)
                                 s
                                 'evec_sw
                                 s
                                 "="
                                 s
                                 (mfc 'vec_sw
                                      'end))
                              (b s 'int 'count "=" "0")
                              (b s 'Coef 'coefs "=" (fc 'Coef 'coef1 'coef2 'coef3 'coef4))
                              (c 'for
                                 open-paren-chunk
                                 semi-colon-chunk
                                 s
                                 'ivec_sw
                                 s
                                 "!="
                                 s
                                 'evec_sw
                                 semi-colon-chunk
                                 s
                                 "++"
                                 'ivec_sw
                                 comma-chunk
                                 s
                                 "++"
                                 'ivec_dw
                                 comma-chunk
                                 s
                                 "++"
                                 'count
                                 close-paren-chunk
                                 (body-chunk (let ([option (lambda (arg) (p (b s (p (b s arg "==" "1"))
                                                                               "?"
                                                                               "0"
                                                                               colon-chunk
                                                                               'count)))])
                                               (b s 'IntVec 'location "=" (fc 'IntVec
                                                                              (option 'x)
                                                                              (option 'y)
                                                                              (option 'z))))
                                             (mfc (fc (scope 'ThreadPoolFIFO
                                                             'self))
                                                  'schedule
                                                  (fc (scope 'boost
                                                             'bind)
                                                      (c "&"
                                                         (tpl-use 'stencil_4_apply_to_field_thread_parallel_execute_internal
                                                                  'OperatorType
                                                                  'SrcPmtrType
                                                                  'DestPmtrType))
                                                      (mfc (fc (tpl-use NCF-chunk
                                                                        'Initial
                                                                        'SrcType)
                                                               'src)
                                                           (c template-chunk
                                                              s
                                                              (tpl-use 'resize_prep SVG-chunk 'InitialShift)))
                                                      (mfc (fc (tpl-use NF-chunk
                                                                        'Initial
                                                                        'DestType)
                                                               'dest)
                                                           (c template-chunk
                                                              s
                                                              (tpl-use 'resize_prep DVG-chunk 'InitialShift)))
                                                      'coefs
                                                      (c "*"
                                                         'ivec_sw)
                                                      (c "*"
                                                         'ivec_dw)
                                                      'split
                                                      'location
                                                      (c "&"
                                                         'semaphore)))))
                              (c 'for
                                 open-paren-chunk
                                 'int
                                 s
                                 'ii
                                 s
                                 "="
                                 s
                                 "0"
                                 semi-colon-chunk
                                 s
                                 'ii
                                 s
                                 "<"
                                 s
                                 (mfc 'vec_sw
                                      'size)
                                 semi-colon-chunk
                                 s
                                 'ii
                                 "++"
                                 close-paren-chunk
                                 (body-chunk (mfc 'semaphore
                                                  'wait))))))
         (tpl-def (list (c typename-chunk s 'OperatorType)
                        (c typename-chunk s 'SrcType)
                        (c typename-chunk s 'DestType))
                  (v-fcn-def 'stencil_4_apply_to_field_general_execute
                             (list (b s
                                      'SrcType const-chunk "&" 'src)
                                   (b s
                                      'DestType "&" 'dest)
                                   (b s
                                      'double const-chunk 'coef1)
                                   (b s
                                      'double const-chunk 'coef2)
                                   (b s
                                      'double const-chunk 'coef3)
                                   (b s
                                      'double const-chunk 'coef4))
                             (c (pp-conditional-ifdef-chunk
                                 'STENCIL_THREADS
                                 (p (c (fc 'is_nebo_thread_parallel)
                                       s "?" s
                                       (fc (tpl-use 'stencil_4_apply_to_field_thread_parallel_execute
                                                    'OperatorType
                                                    'SrcType
                                                    'DestType)
                                           'src
                                           'dest
                                           'coef1
                                           'coef2
                                           'coef3
                                           'coef4
                                           (fc 'get_nebo_soft_thread_count))
                                       s ":" s
                                       (fc (tpl-use 'stencil_4_apply_to_field_sequential_execute
                                                    'OperatorType
                                                    'SrcType
                                                    'DestType)
                                           'src
                                           'dest
                                           'coef1
                                           'coef2
                                           'coef3
                                           'coef4)))
                                 (fc (tpl-use 'stencil_4_apply_to_field_sequential_execute
                                              'OperatorType
                                              'SrcType
                                              'DestType)
                                     'src
                                     'dest
                                     'coef1
                                     'coef2
                                     'coef3
                                     'coef4))
                                new-line-chunk)))
         ))))
